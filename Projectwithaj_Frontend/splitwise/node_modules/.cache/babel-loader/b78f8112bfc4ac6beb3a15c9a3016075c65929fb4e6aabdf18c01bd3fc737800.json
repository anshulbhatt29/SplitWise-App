{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anbhatt\\\\Projectwithaj\\\\splitwise\\\\src\\\\Login\\\\RegisterComponents\\\\Register.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  handleRegister\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [repassword, setRepassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          required: true,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter the Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: password,\n          required: true,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ReEnter the Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: repassword,\n          required: true,\n          onChange: e => setRepassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleRegister(username, password, repassword),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 7\n  }, this);\n};\n_s(Register, \"A0Lq3vZp+hcBrAvqL0nw0cmeovU=\");\n_c = Register;\nconst RegisterPage = () => {\n  _s2();\n  const [onClickRegister, setOnClickRegister] = useState(false);\n  const handleRegister = async (username, password, repassword) => {\n    if (password === repassword && password !== '') {\n      try {\n        const response = await fetch('http://localhost:8080/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username,\n            password\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Error during registration');\n        }\n        const data = await response.json();\n        console.log('User registered successfully:', data);\n      } catch (error) {\n        console.error('Error during registration:', error);\n      }\n      setOnClickRegister(true);\n    } else {\n      alert(\"Wrong Credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: onClickRegister ? /*#__PURE__*/_jsxDEV(SplitMoney, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      handleRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n};\n_s2(RegisterPage, \"SwbGbEjSqy+ll7TWTO1UM4x6mJw=\");\n_c2 = RegisterPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"RegisterPage\");","map":{"version":3,"names":["Register","handleRegister","_s","username","setUsername","useState","password","setPassword","repassword","setRepassword","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","required","onChange","e","target","onClick","_c","RegisterPage","_s2","onClickRegister","setOnClickRegister","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","alert","SplitMoney","_c2","$RefreshReg$"],"sources":["C:/Users/anbhatt/Projectwithaj/splitwise/src/Login/RegisterComponents/Register.jsx"],"sourcesContent":["const Register = ({handleRegister}) =>{\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repassword, setRepassword] = useState('');\r\n    return (\r\n      <div>\r\n        <h2>Register Page</h2>\r\n        <form>\r\n          <label>\r\n            Enter the Username:\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              required\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <br/>\r\n          <label>\r\n            Enter the Password:\r\n            <input\r\n              type=\"text\"\r\n              value={password}\r\n              required\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </label>\r\n          <br />\r\n          <br/>\r\n          <label>\r\n            ReEnter the Password:\r\n            <input\r\n              type=\"text\"\r\n              value={repassword}\r\n              required\r\n              onChange={(e) => setRepassword(e.target.value)}\r\n            />\r\n          </label>\r\n          <br/>\r\n          <br/>\r\n          <button type=\"button\" onClick={()=>handleRegister(username,password,repassword)}>\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  \r\n  }\r\n  \r\n  const RegisterPage = () => {\r\n    \r\n      const [onClickRegister, setOnClickRegister] = useState(false);\r\n  \r\n    const handleRegister = async (username,password,repassword) => {\r\n      if(password === repassword && password !=='')\r\n      {\r\n          try {\r\n              const response = await fetch('http://localhost:8080/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ username, password }),\r\n              });\r\n        \r\n              if (!response.ok) {\r\n                throw new Error('Error during registration');\r\n              }\r\n        \r\n              const data = await response.json();\r\n              console.log('User registered successfully:', data);\r\n            } catch (error) {\r\n              console.error('Error during registration:', error);\r\n            }\r\n          setOnClickRegister(true);\r\n      }\r\n      else{\r\n          alert(\"Wrong Credentials\");\r\n      }\r\n     \r\n    };\r\n  \r\n    return (\r\n      <div>\r\n          {\r\n              onClickRegister?<SplitMoney></SplitMoney>:<Register handleRegister={handleRegister}/>\r\n          }\r\n      </div>\r\n  \r\n    );\r\n  };"],"mappings":";;;;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAACC;AAAc,CAAC,KAAI;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAChD,oBACEK,OAAA;IAAAC,QAAA,gBACED,OAAA;MAAAC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBL,OAAA;MAAAC,QAAA,gBACED,OAAA;QAAAC,QAAA,GAAO,qBAEL,eAAAD,OAAA;UACEM,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEd,QAAS;UAChBe,QAAQ;UACRC,QAAQ,EAAGC,CAAC,IAAKhB,WAAW,CAACgB,CAAC,CAACC,MAAM,CAACJ,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLL,OAAA;QAAAC,QAAA,GAAO,qBAEL,eAAAD,OAAA;UACEM,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEX,QAAS;UAChBY,QAAQ;UACRC,QAAQ,EAAGC,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACC,MAAM,CAACJ,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLL,OAAA;QAAAC,QAAA,GAAO,uBAEL,eAAAD,OAAA;UACEM,IAAI,EAAC,MAAM;UACXC,KAAK,EAAET,UAAW;UAClBU,QAAQ;UACRC,QAAQ,EAAGC,CAAC,IAAKX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACJ,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLL,OAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLL,OAAA;QAAQM,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAEA,CAAA,KAAIrB,cAAc,CAACE,QAAQ,EAACG,QAAQ,EAACE,UAAU,CAAE;QAAAG,QAAA,EAAC;MAEjF;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV,CAAC;AAAAb,EAAA,CAhDGF,QAAQ;AAAAuB,EAAA,GAARvB,QAAQ;AAkDZ,MAAMwB,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAEvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMJ,cAAc,GAAG,MAAAA,CAAOE,QAAQ,EAACG,QAAQ,EAACE,UAAU,KAAK;IAC7D,IAAGF,QAAQ,KAAKE,UAAU,IAAIF,QAAQ,KAAI,EAAE,EAC5C;MACI,IAAI;QACA,MAAMsB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAE/B,QAAQ;YAAEG;UAAS,CAAC;QAC7C,CAAC,CAAC;QAEF,IAAI,CAACsB,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;QAC9C;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEH,IAAI,CAAC;MACpD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;MACFd,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,MACG;MACAe,KAAK,CAAC,mBAAmB,CAAC;IAC9B;EAEF,CAAC;EAED,oBACEhC,OAAA;IAAAC,QAAA,EAEQe,eAAe,gBAAChB,OAAA,CAACiC,UAAU;MAAA/B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,gBAACL,OAAA,CAACV,QAAQ;MAACC,cAAc,EAAEA;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExF,CAAC;AAGV,CAAC;AAACU,GAAA,CAzCID,YAAY;AAAAoB,GAAA,GAAZpB,YAAY;AAAA,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}