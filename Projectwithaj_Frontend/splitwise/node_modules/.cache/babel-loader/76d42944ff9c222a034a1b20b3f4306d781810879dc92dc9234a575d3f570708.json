{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anbhatt\\\\Projectwithaj\\\\splitwise\\\\src\\\\Login\\\\RegisterComponents\\\\Login.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport SplitMoney from '../../splittingMoney/SplitMoney';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  handleLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => handleLogin(username, password),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = Login;\nconst LoginPage = () => {\n  _s2();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const handleLogin = async (username, password) => {\n    try {\n      const response = await fetch('http://localhost:8080/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          'userName': username,\n          password\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Error during Login');\n      }\n      const data = await response.json();\n      console.log('User LoggedIn successfully:', data);\n      setLoggedIn(true);\n    } catch (error) {\n      console.error('Error during Logging:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(SplitMoney, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s2(LoginPage, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c2 = LoginPage;\nexport default LoginPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","SplitMoney","jsxDEV","_jsxDEV","Login","handleLogin","_s","username","setUsername","password","setPassword","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","LoginPage","_s2","isLoggedIn","setLoggedIn","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","_c2","$RefreshReg$"],"sources":["C:/Users/anbhatt/Projectwithaj/splitwise/src/Login/RegisterComponents/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SplitMoney from '../../splittingMoney/SplitMoney';\r\n\r\n\r\nconst Login = ({handleLogin}) =>{\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    return (\r\n        <div>\r\n          <h2>Login Page</h2>\r\n          <form>\r\n            <label>\r\n              Username:\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <label>\r\n              Password:\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <button type=\"button\" onClick={()=>handleLogin(username,password)}>\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n\r\nconst handleLogin = async (username,password) => {\r\n    try {\r\n        const response = await fetch('http://localhost:8080/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ 'userName':username, password }),\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Error during Login');\r\n        }\r\n  \r\n        const data = await response.json();\r\n        console.log('User LoggedIn successfully:', data);\r\n        setLoggedIn(true);\r\n      } catch (error) {\r\n        console.error('Error during Logging:', error);\r\n      }\r\n\r\n    }\r\n\r\nreturn (\r\n  <div>\r\n    {isLoggedIn ? (\r\n      <SplitMoney />\r\n    ) : (\r\n      <Login handleLogin={handleLogin} />\r\n    )}\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}