{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anbhatt\\\\Projectwithaj\\\\splitwise\\\\src\\\\Login\\\\RegisterComponents\\\\Login.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ren = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(ren, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\nconst LoginPage = () => {\n  _s2();\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  //   const navigate = useNavigate();\n\n  const handleLogin = () => {\n    //     if(username!==''&&password!==''){\n    //    // call the spring endpoint for logging...\n    //    navigate('/split-money');\n    setLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoggedIn ? /*#__PURE__*/_jsxDEV(SplitMoney, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"ren\", {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n_s2(LoginPage, \"9ogPs/qKjoLSy/tthqIGD5LodSI=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ren","_s","username","setUsername","password","setPassword","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","handleLogin","LoginPage","_s2","isLoggedIn","setLoggedIn","SplitMoney","_c","$RefreshReg$"],"sources":["C:/Users/anbhatt/Projectwithaj/splitwise/src/Login/RegisterComponents/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst ren =()=>{\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    return (\r\n        <div>\r\n          <h2>Login Page</h2>\r\n          <form>\r\n            <label>\r\n              Username:\r\n              <input\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <label>\r\n              Password:\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </label>\r\n            <br />\r\n            <br />\r\n            <button type=\"button\" onClick={handleLogin}>\r\n              Login\r\n            </button>\r\n          </form>\r\n        </div>\r\n      );\r\n}\r\n\r\nconst LoginPage = () => {\r\n  const [isLoggedIn, setLoggedIn] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\nconst handleLogin = () => {\r\n//     if(username!==''&&password!==''){\r\n//    // call the spring endpoint for logging...\r\n//    navigate('/split-money');\r\nsetLoggedIn(true);\r\n\r\n    }\r\n\r\nreturn (\r\n  <div>\r\n    {isLoggedIn ? (\r\n      <SplitMoney />\r\n    ) : (\r\n      <ren handleLogin={handleLogin} />\r\n    )}\r\n  </div>\r\n);\r\n\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}